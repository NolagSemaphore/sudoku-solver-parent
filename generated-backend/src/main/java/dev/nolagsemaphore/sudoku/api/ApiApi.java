/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package dev.nolagsemaphore.sudoku.api;

import dev.nolagsemaphore.sudoku.model.SudokuBoard;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-07T14:58:34.555439300-04:00[America/New_York]", comments = "Generator version: 7.9.0")
@Validated
@Tag(name = "api", description = "the api API")
public interface ApiApi {

    /**
     * POST /api/sudoku/solve : Solve a 9x9 Sudoku puzzle
     *
     * @param sudokuBoard The initial Sudoku board with 0 for empty cells (required)
     * @return The solved Sudoku board (status code 200)
     */
    @Operation(
        operationId = "solveSudoku",
        summary = "Solve a 9x9 Sudoku puzzle",
        responses = {
            @ApiResponse(responseCode = "200", description = "The solved Sudoku board", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SudokuBoard.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/sudoku/solve",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<SudokuBoard> solveSudoku(
        @Parameter(name = "SudokuBoard", description = "The initial Sudoku board with 0 for empty cells", required = true) @Valid @RequestBody SudokuBoard sudokuBoard
    );

}
